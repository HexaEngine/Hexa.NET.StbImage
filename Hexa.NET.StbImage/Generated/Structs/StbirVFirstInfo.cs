// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.StbImage
{
	/// <summary>
	/// structure that allow us to query and override info for training the costs<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "STBIR__V_FIRST_INFO")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct StbirVFirstInfo
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "v_cost")]
		[NativeName(NativeNameType.Type, "double")]
		public double VCost;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "h_cost")]
		[NativeName(NativeNameType.Type, "double")]
		public double HCost;

		/// <summary>
		/// 0 = no control, 1 = force hori, 2 = force vert<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "control_v_first")]
		[NativeName(NativeNameType.Type, "int")]
		public int ControlVFirst;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "v_first")]
		[NativeName(NativeNameType.Type, "int")]
		public int VFirst;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "v_resize_classification")]
		[NativeName(NativeNameType.Type, "int")]
		public int VResizeClassification;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "is_gather")]
		[NativeName(NativeNameType.Type, "int")]
		public int IsGather;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe StbirVFirstInfo(double vCost = default, double hCost = default, int controlVFirst = default, int vFirst = default, int vResizeClassification = default, int isGather = default)
		{
			VCost = vCost;
			HCost = hCost;
			ControlVFirst = controlVFirst;
			VFirst = vFirst;
			VResizeClassification = vResizeClassification;
			IsGather = isGather;
		}


	}

}
