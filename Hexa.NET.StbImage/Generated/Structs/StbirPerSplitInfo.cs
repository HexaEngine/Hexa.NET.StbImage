// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.StbImage
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "stbir__per_split_info")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct StbirPerSplitInfo
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "decode_buffer")]
		[NativeName(NativeNameType.Type, "float*")]
		public unsafe float* DecodeBuffer;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ring_buffer_first_scanline")]
		[NativeName(NativeNameType.Type, "int")]
		public int RingBufferFirstScanline;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "ring_buffer_last_scanline")]
		[NativeName(NativeNameType.Type, "int")]
		public int RingBufferLastScanline;

		/// <summary>
		/// first_scanline is at this index in the ring buffer<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ring_buffer_begin_index")]
		[NativeName(NativeNameType.Type, "int")]
		public int RingBufferBeginIndex;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "start_output_y")]
		[NativeName(NativeNameType.Type, "int")]
		public int StartOutputY;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "end_output_y")]
		[NativeName(NativeNameType.Type, "int")]
		public int EndOutputY;

		/// <summary>
		/// used in scatter only<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "start_input_y")]
		[NativeName(NativeNameType.Type, "int")]
		public int StartInputY;

		/// <summary>
		/// used in scatter only<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "end_input_y")]
		[NativeName(NativeNameType.Type, "int")]
		public int EndInputY;

		/// <summary>
		/// one big buffer that we index into<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ring_buffer")]
		[NativeName(NativeNameType.Type, "float*")]
		public unsafe float* RingBuffer;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "vertical_buffer")]
		[NativeName(NativeNameType.Type, "float*")]
		public unsafe float* VerticalBuffer;

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "no_cache_straddle")]
		[NativeName(NativeNameType.Type, "char[64]")]
		public byte NoCacheStraddle_0;
		public byte NoCacheStraddle_1;
		public byte NoCacheStraddle_2;
		public byte NoCacheStraddle_3;
		public byte NoCacheStraddle_4;
		public byte NoCacheStraddle_5;
		public byte NoCacheStraddle_6;
		public byte NoCacheStraddle_7;
		public byte NoCacheStraddle_8;
		public byte NoCacheStraddle_9;
		public byte NoCacheStraddle_10;
		public byte NoCacheStraddle_11;
		public byte NoCacheStraddle_12;
		public byte NoCacheStraddle_13;
		public byte NoCacheStraddle_14;
		public byte NoCacheStraddle_15;
		public byte NoCacheStraddle_16;
		public byte NoCacheStraddle_17;
		public byte NoCacheStraddle_18;
		public byte NoCacheStraddle_19;
		public byte NoCacheStraddle_20;
		public byte NoCacheStraddle_21;
		public byte NoCacheStraddle_22;
		public byte NoCacheStraddle_23;
		public byte NoCacheStraddle_24;
		public byte NoCacheStraddle_25;
		public byte NoCacheStraddle_26;
		public byte NoCacheStraddle_27;
		public byte NoCacheStraddle_28;
		public byte NoCacheStraddle_29;
		public byte NoCacheStraddle_30;
		public byte NoCacheStraddle_31;
		public byte NoCacheStraddle_32;
		public byte NoCacheStraddle_33;
		public byte NoCacheStraddle_34;
		public byte NoCacheStraddle_35;
		public byte NoCacheStraddle_36;
		public byte NoCacheStraddle_37;
		public byte NoCacheStraddle_38;
		public byte NoCacheStraddle_39;
		public byte NoCacheStraddle_40;
		public byte NoCacheStraddle_41;
		public byte NoCacheStraddle_42;
		public byte NoCacheStraddle_43;
		public byte NoCacheStraddle_44;
		public byte NoCacheStraddle_45;
		public byte NoCacheStraddle_46;
		public byte NoCacheStraddle_47;
		public byte NoCacheStraddle_48;
		public byte NoCacheStraddle_49;
		public byte NoCacheStraddle_50;
		public byte NoCacheStraddle_51;
		public byte NoCacheStraddle_52;
		public byte NoCacheStraddle_53;
		public byte NoCacheStraddle_54;
		public byte NoCacheStraddle_55;
		public byte NoCacheStraddle_56;
		public byte NoCacheStraddle_57;
		public byte NoCacheStraddle_58;
		public byte NoCacheStraddle_59;
		public byte NoCacheStraddle_60;
		public byte NoCacheStraddle_61;
		public byte NoCacheStraddle_62;
		public byte NoCacheStraddle_63;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe StbirPerSplitInfo(float* decodeBuffer = default, int ringBufferFirstScanline = default, int ringBufferLastScanline = default, int ringBufferBeginIndex = default, int startOutputY = default, int endOutputY = default, int startInputY = default, int endInputY = default, float* ringBuffer = default, float* verticalBuffer = default, byte* noCacheStraddle = default)
		{
			DecodeBuffer = decodeBuffer;
			RingBufferFirstScanline = ringBufferFirstScanline;
			RingBufferLastScanline = ringBufferLastScanline;
			RingBufferBeginIndex = ringBufferBeginIndex;
			StartOutputY = startOutputY;
			EndOutputY = endOutputY;
			StartInputY = startInputY;
			EndInputY = endInputY;
			RingBuffer = ringBuffer;
			VerticalBuffer = verticalBuffer;
			if (noCacheStraddle != default(byte*))
			{
				NoCacheStraddle_0 = noCacheStraddle[0];
				NoCacheStraddle_1 = noCacheStraddle[1];
				NoCacheStraddle_2 = noCacheStraddle[2];
				NoCacheStraddle_3 = noCacheStraddle[3];
				NoCacheStraddle_4 = noCacheStraddle[4];
				NoCacheStraddle_5 = noCacheStraddle[5];
				NoCacheStraddle_6 = noCacheStraddle[6];
				NoCacheStraddle_7 = noCacheStraddle[7];
				NoCacheStraddle_8 = noCacheStraddle[8];
				NoCacheStraddle_9 = noCacheStraddle[9];
				NoCacheStraddle_10 = noCacheStraddle[10];
				NoCacheStraddle_11 = noCacheStraddle[11];
				NoCacheStraddle_12 = noCacheStraddle[12];
				NoCacheStraddle_13 = noCacheStraddle[13];
				NoCacheStraddle_14 = noCacheStraddle[14];
				NoCacheStraddle_15 = noCacheStraddle[15];
				NoCacheStraddle_16 = noCacheStraddle[16];
				NoCacheStraddle_17 = noCacheStraddle[17];
				NoCacheStraddle_18 = noCacheStraddle[18];
				NoCacheStraddle_19 = noCacheStraddle[19];
				NoCacheStraddle_20 = noCacheStraddle[20];
				NoCacheStraddle_21 = noCacheStraddle[21];
				NoCacheStraddle_22 = noCacheStraddle[22];
				NoCacheStraddle_23 = noCacheStraddle[23];
				NoCacheStraddle_24 = noCacheStraddle[24];
				NoCacheStraddle_25 = noCacheStraddle[25];
				NoCacheStraddle_26 = noCacheStraddle[26];
				NoCacheStraddle_27 = noCacheStraddle[27];
				NoCacheStraddle_28 = noCacheStraddle[28];
				NoCacheStraddle_29 = noCacheStraddle[29];
				NoCacheStraddle_30 = noCacheStraddle[30];
				NoCacheStraddle_31 = noCacheStraddle[31];
				NoCacheStraddle_32 = noCacheStraddle[32];
				NoCacheStraddle_33 = noCacheStraddle[33];
				NoCacheStraddle_34 = noCacheStraddle[34];
				NoCacheStraddle_35 = noCacheStraddle[35];
				NoCacheStraddle_36 = noCacheStraddle[36];
				NoCacheStraddle_37 = noCacheStraddle[37];
				NoCacheStraddle_38 = noCacheStraddle[38];
				NoCacheStraddle_39 = noCacheStraddle[39];
				NoCacheStraddle_40 = noCacheStraddle[40];
				NoCacheStraddle_41 = noCacheStraddle[41];
				NoCacheStraddle_42 = noCacheStraddle[42];
				NoCacheStraddle_43 = noCacheStraddle[43];
				NoCacheStraddle_44 = noCacheStraddle[44];
				NoCacheStraddle_45 = noCacheStraddle[45];
				NoCacheStraddle_46 = noCacheStraddle[46];
				NoCacheStraddle_47 = noCacheStraddle[47];
				NoCacheStraddle_48 = noCacheStraddle[48];
				NoCacheStraddle_49 = noCacheStraddle[49];
				NoCacheStraddle_50 = noCacheStraddle[50];
				NoCacheStraddle_51 = noCacheStraddle[51];
				NoCacheStraddle_52 = noCacheStraddle[52];
				NoCacheStraddle_53 = noCacheStraddle[53];
				NoCacheStraddle_54 = noCacheStraddle[54];
				NoCacheStraddle_55 = noCacheStraddle[55];
				NoCacheStraddle_56 = noCacheStraddle[56];
				NoCacheStraddle_57 = noCacheStraddle[57];
				NoCacheStraddle_58 = noCacheStraddle[58];
				NoCacheStraddle_59 = noCacheStraddle[59];
				NoCacheStraddle_60 = noCacheStraddle[60];
				NoCacheStraddle_61 = noCacheStraddle[61];
				NoCacheStraddle_62 = noCacheStraddle[62];
				NoCacheStraddle_63 = noCacheStraddle[63];
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe StbirPerSplitInfo(float* decodeBuffer = default, int ringBufferFirstScanline = default, int ringBufferLastScanline = default, int ringBufferBeginIndex = default, int startOutputY = default, int endOutputY = default, int startInputY = default, int endInputY = default, float* ringBuffer = default, float* verticalBuffer = default, Span<byte> noCacheStraddle = default)
		{
			DecodeBuffer = decodeBuffer;
			RingBufferFirstScanline = ringBufferFirstScanline;
			RingBufferLastScanline = ringBufferLastScanline;
			RingBufferBeginIndex = ringBufferBeginIndex;
			StartOutputY = startOutputY;
			EndOutputY = endOutputY;
			StartInputY = startInputY;
			EndInputY = endInputY;
			RingBuffer = ringBuffer;
			VerticalBuffer = verticalBuffer;
			if (noCacheStraddle != default(Span<byte>))
			{
				NoCacheStraddle_0 = noCacheStraddle[0];
				NoCacheStraddle_1 = noCacheStraddle[1];
				NoCacheStraddle_2 = noCacheStraddle[2];
				NoCacheStraddle_3 = noCacheStraddle[3];
				NoCacheStraddle_4 = noCacheStraddle[4];
				NoCacheStraddle_5 = noCacheStraddle[5];
				NoCacheStraddle_6 = noCacheStraddle[6];
				NoCacheStraddle_7 = noCacheStraddle[7];
				NoCacheStraddle_8 = noCacheStraddle[8];
				NoCacheStraddle_9 = noCacheStraddle[9];
				NoCacheStraddle_10 = noCacheStraddle[10];
				NoCacheStraddle_11 = noCacheStraddle[11];
				NoCacheStraddle_12 = noCacheStraddle[12];
				NoCacheStraddle_13 = noCacheStraddle[13];
				NoCacheStraddle_14 = noCacheStraddle[14];
				NoCacheStraddle_15 = noCacheStraddle[15];
				NoCacheStraddle_16 = noCacheStraddle[16];
				NoCacheStraddle_17 = noCacheStraddle[17];
				NoCacheStraddle_18 = noCacheStraddle[18];
				NoCacheStraddle_19 = noCacheStraddle[19];
				NoCacheStraddle_20 = noCacheStraddle[20];
				NoCacheStraddle_21 = noCacheStraddle[21];
				NoCacheStraddle_22 = noCacheStraddle[22];
				NoCacheStraddle_23 = noCacheStraddle[23];
				NoCacheStraddle_24 = noCacheStraddle[24];
				NoCacheStraddle_25 = noCacheStraddle[25];
				NoCacheStraddle_26 = noCacheStraddle[26];
				NoCacheStraddle_27 = noCacheStraddle[27];
				NoCacheStraddle_28 = noCacheStraddle[28];
				NoCacheStraddle_29 = noCacheStraddle[29];
				NoCacheStraddle_30 = noCacheStraddle[30];
				NoCacheStraddle_31 = noCacheStraddle[31];
				NoCacheStraddle_32 = noCacheStraddle[32];
				NoCacheStraddle_33 = noCacheStraddle[33];
				NoCacheStraddle_34 = noCacheStraddle[34];
				NoCacheStraddle_35 = noCacheStraddle[35];
				NoCacheStraddle_36 = noCacheStraddle[36];
				NoCacheStraddle_37 = noCacheStraddle[37];
				NoCacheStraddle_38 = noCacheStraddle[38];
				NoCacheStraddle_39 = noCacheStraddle[39];
				NoCacheStraddle_40 = noCacheStraddle[40];
				NoCacheStraddle_41 = noCacheStraddle[41];
				NoCacheStraddle_42 = noCacheStraddle[42];
				NoCacheStraddle_43 = noCacheStraddle[43];
				NoCacheStraddle_44 = noCacheStraddle[44];
				NoCacheStraddle_45 = noCacheStraddle[45];
				NoCacheStraddle_46 = noCacheStraddle[46];
				NoCacheStraddle_47 = noCacheStraddle[47];
				NoCacheStraddle_48 = noCacheStraddle[48];
				NoCacheStraddle_49 = noCacheStraddle[49];
				NoCacheStraddle_50 = noCacheStraddle[50];
				NoCacheStraddle_51 = noCacheStraddle[51];
				NoCacheStraddle_52 = noCacheStraddle[52];
				NoCacheStraddle_53 = noCacheStraddle[53];
				NoCacheStraddle_54 = noCacheStraddle[54];
				NoCacheStraddle_55 = noCacheStraddle[55];
				NoCacheStraddle_56 = noCacheStraddle[56];
				NoCacheStraddle_57 = noCacheStraddle[57];
				NoCacheStraddle_58 = noCacheStraddle[58];
				NoCacheStraddle_59 = noCacheStraddle[59];
				NoCacheStraddle_60 = noCacheStraddle[60];
				NoCacheStraddle_61 = noCacheStraddle[61];
				NoCacheStraddle_62 = noCacheStraddle[62];
				NoCacheStraddle_63 = noCacheStraddle[63];
			}
		}


	}

}
