// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.StbImage
{
	/// <summary>
	/// load image by filename, open file, or memory buffer<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "stbi_io_callbacks")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct StbiIoCallbacks
	{
		/// <summary>
		/// fill 'data' with 'size' bytes.  return number of bytes actually read<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "read")]
		[NativeName(NativeNameType.Type, "int (*)(void* user, char* data, int size)*")]
		public unsafe void* Read;

		/// <summary>
		/// skip the next 'n' bytes, or 'unget' the last -n bytes if negative<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "skip")]
		[NativeName(NativeNameType.Type, "void (*)(void* user, int n)*")]
		public unsafe void* Skip;

		/// <summary>
		/// returns nonzero if we are at end of file/data<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "eof")]
		[NativeName(NativeNameType.Type, "int (*)(void* user)*")]
		public unsafe void* Eof;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe StbiIoCallbacks(delegate*<void*, byte*, int, int> read = default, delegate*<void*, int, void> skip = default, delegate*<void*, int> eof = default)
		{
			Read = (delegate*<void*, byte*, int, int>*)read;
			Skip = (delegate*<void*, int, void>*)skip;
			Eof = (delegate*<void*, int>*)eof;
		}


	}

}
