// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.StbImage
{
	#if NET5_0_OR_GREATER
	/// <summary>
	/// fill 'data' with 'size' bytes.  return number of bytes actually read<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "read")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate int Read([NativeName(NativeNameType.Param, "user")] [NativeName(NativeNameType.Type, "void*")] void* user, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "char*")] byte* data, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "int")] int size);

	#else
	/// <summary>
	/// fill 'data' with 'size' bytes.  return number of bytes actually read<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "read")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate int Read([NativeName(NativeNameType.Param, "user")] [NativeName(NativeNameType.Type, "void*")] nint user, [NativeName(NativeNameType.Param, "data")] [NativeName(NativeNameType.Type, "char*")] nint data, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "int")] int size);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// skip the next 'n' bytes, or 'unget' the last -n bytes if negative<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "skip")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void Skip([NativeName(NativeNameType.Param, "user")] [NativeName(NativeNameType.Type, "void*")] void* user, [NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "int")] int n);

	#else
	/// <summary>
	/// skip the next 'n' bytes, or 'unget' the last -n bytes if negative<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "skip")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void Skip([NativeName(NativeNameType.Param, "user")] [NativeName(NativeNameType.Type, "void*")] nint user, [NativeName(NativeNameType.Param, "n")] [NativeName(NativeNameType.Type, "int")] int n);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// returns nonzero if we are at end of file/data<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "eof")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate int Eof([NativeName(NativeNameType.Param, "user")] [NativeName(NativeNameType.Type, "void*")] void* user);

	#else
	/// <summary>
	/// returns nonzero if we are at end of file/data<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "eof")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate int Eof([NativeName(NativeNameType.Param, "user")] [NativeName(NativeNameType.Type, "void*")] nint user);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.Delegate, "resample")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate byte* Resample([NativeName(NativeNameType.Param, "out")] [NativeName(NativeNameType.Type, "stbi_uc*")] byte* output, [NativeName(NativeNameType.Param, "in0")] [NativeName(NativeNameType.Type, "stbi_uc*")] byte* in0, [NativeName(NativeNameType.Param, "in1")] [NativeName(NativeNameType.Type, "stbi_uc*")] byte* in1, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "int")] int w, [NativeName(NativeNameType.Param, "hs")] [NativeName(NativeNameType.Type, "int")] int hs);

	#else
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.Delegate, "resample")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate nint Resample([NativeName(NativeNameType.Param, "out")] [NativeName(NativeNameType.Type, "stbi_uc*")] nint output, [NativeName(NativeNameType.Param, "in0")] [NativeName(NativeNameType.Type, "stbi_uc*")] nint in0, [NativeName(NativeNameType.Param, "in1")] [NativeName(NativeNameType.Type, "stbi_uc*")] nint in1, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "int")] int w, [NativeName(NativeNameType.Param, "hs")] [NativeName(NativeNameType.Type, "int")] int hs);

	#endif

	#if NET5_0_OR_GREATER
	/// <summary>
	/// static jfif-centered resampling (across block boundaries)<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "resample_row_func")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate byte* ResampleRowFunc([NativeName(NativeNameType.Param, "out")] [NativeName(NativeNameType.Type, "stbi_uc*")] byte* output, [NativeName(NativeNameType.Param, "in0")] [NativeName(NativeNameType.Type, "stbi_uc*")] byte* in0, [NativeName(NativeNameType.Param, "in1")] [NativeName(NativeNameType.Type, "stbi_uc*")] byte* in1, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "int")] int w, [NativeName(NativeNameType.Param, "hs")] [NativeName(NativeNameType.Type, "int")] int hs);

	#else
	/// <summary>
	/// static jfif-centered resampling (across block boundaries)<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "resample_row_func")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate nint ResampleRowFunc([NativeName(NativeNameType.Param, "out")] [NativeName(NativeNameType.Type, "stbi_uc*")] nint output, [NativeName(NativeNameType.Param, "in0")] [NativeName(NativeNameType.Type, "stbi_uc*")] nint in0, [NativeName(NativeNameType.Param, "in1")] [NativeName(NativeNameType.Type, "stbi_uc*")] nint in1, [NativeName(NativeNameType.Param, "w")] [NativeName(NativeNameType.Type, "int")] int w, [NativeName(NativeNameType.Param, "hs")] [NativeName(NativeNameType.Type, "int")] int hs);

	#endif

}
